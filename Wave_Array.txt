Wave Array
Problem Description

Given an array of integers A, sort the array into a wave like array and return it, In other words, arrange the elements into a sequence such that

a1 >= a2 <= a3 >= a4 <= a5.....
NOTE : If there are multiple answers possible, return the one that's lexicographically smallest.



Problem Constraints
1 <= len(A) <= 106
1 <= A[i] <= 106



Input Format
First argument is an integer array A.



Output Format
Return an array arranged in the sequence as described.



Example Input
Input 1:

A = [1, 2, 3, 4]
Input 2:

A = [1, 2]


Example Output
Output 1:

[2, 1, 4, 3]
Output 2:

[2, 1]


Example Explanation
Explanation 1:

One possible answer : [2, 1, 4, 3]
Another possible answer : [4, 1, 3, 2]
First answer is lexicographically smallest. So, return [2, 1, 4, 3].
Explanation 1:

Only possible answer is [2, 1].


________________________________________________________Solution____________________________________________________________

class Solution:
	# @param A : list of integers
	# @return a list of integers
	def wave(self, A):
	    
	    A.sort()
	    ans = []
	    
	    if len(A) & 1 == 1:
	        n = len(A) -1
	    else:
	        n = len(A)
	    
        for i in range(n):
        
            if i & 1 == 0:
                ans.append(A[i+1])
            else:
                ans.append(A[i-1])
        
        if n == len(A):
            return ans
        else:
            ans.append(A[-1])
        
        return ans
		
________________________________________________________Given_Solution____________________________________________________________

class Solution:
    # @param A : list of integers
    # @return a list of integers
    def wave(self, A):
        A.sort()
        n = len(A)
        # ret = [0]*n
        for i in range(0, n, 2):
            if i + 1 < n:
                A[i], A[i + 1] = A[i + 1], A[i]
        return A