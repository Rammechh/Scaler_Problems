Spiral Order Matrix II
Problem Description

Given an integer A, generate a square matrix filled with elements from 1 to A2 in spiral order.



Problem Constraints
1 <= A <= 1000



Input Format
First and only argument is integer A


Output Format
Return a 2-D matrix which consists of the elements in spiral order.



Example Input
Input 1:

1
Input 2:

2


Example Output
Output 1:

[ [1] ]
Output 2:

[ [1, 2], [4, 3] ]


Example Explanation
Explanation 1:

 
Only 1 is to be arranged.
Explanation 2:

1 --> 2
      |
      |
4<--- 3

________________________________________________________Solution_________________________________________________
class Solution:
	# @param A : integer
	# @return a list of list of integers
	def generateMatrix(self, A):
	    
	    res = [[0 for i in range(A)] for j in range(A)]

        left, top = 0, 0
        right, bottom = A-1, A-1
        k = 1
        
        ans = [[0 for i in range(A)] for j in range(A)]
        
        while left<=right and top<=bottom:
            temp = []
            for i in range(left, right+1):
                res[top][i] = k
                k += 1
            top += 1
            
            for i in range(top, bottom+1):
                res[i][right] = k
                k += 1
            right -= 1
            
            for i in range(right, left-1, -1):
                res[bottom][i] = k
                k += 1
            bottom -= 1
            
            for i in range(bottom, top-1, -1):
                res[i][left] = k
                k += 1
            left += 1
            
        return res
________________________________________________________Given_Solution_________________________________________________
class Solution:
    # @param A : integer
    # @return a list of list of integers
    def generateMatrix(self, A):
        n = A
        ret = [[0]*n]
        for i in range(n-1):
	        ret.append([0]*n)
        
        T = 0
        B = n-1
        L = 0
        R = n-1
        direction = 0
        num = 1
        while T <= B and L <= R:
        	if direction == 0:
        		for i in range(L, R+1):
        			ret[T][i] = num
        			num += 1
        		T += 1
        		direction = 1
        	elif direction == 1:
        		for i in range(T, B+1):
        			ret[i][R] = num
        			num += 1
        		R -= 1
        		direction = 2
        	elif direction == 2:
        		for i in range(R, L - 1, -1):
        			ret[B][i] = num
        			num += 1
        		B -= 1
        		direction = 3
        	else:
        		for i in range(B, T - 1, -1):
        			ret[i][L] = num
        			num += 1
        		L += 1
        		direction = 0
        return ret