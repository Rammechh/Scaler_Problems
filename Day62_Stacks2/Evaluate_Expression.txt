Q3. Evaluate Expression

Problem Description

An arithmetic expression is given by a charater array A of size N. Evaluate the value of an arithmetic expression in Reverse Polish Notation.

Valid operators are +, -, *, /. Each character may be an integer or an operator.



Problem Constraints

1 <= N <= 105



Input Format

The only argument given is character array A.



Output Format

Return the value of arithmetic expression formed using reverse Polish Notation.



Example Input

Input 1:
    A =   ["2", "1", "+", "3", "*"]
Input 2:
    A = ["4", "13", "5", "/", "+"]


Example Output

Output 1:
    9
Output 2:
    6


Example Explanation

Explaination 1:
    starting from backside:
    * : () * ()
    3 : () * (3)
    + : (() + ()) * (3)
    1 : (() + (1)) * (3)
    2 : ((2) + (1)) * (3)
    ((2) + (1)) * (3) = 9
Explaination 2:
    + : () + ()
    / : () + (() / ())
    5 : () + (() / (5))
    1 : () + ((13) / (5))
    4 : (4) + ((13) / (5))
    (4) + ((13) / (5)) = 6
	
_______________________________________________________________________Solution___________________________________________________________
class Solution:
	# @param A : list of strings
	# @return an integer
	def evalRPN(self, A):
        stack = []
        for ele in A:
            if stack and ele == '+' or ele == '-' or ele == '*' or ele == '/':
                b = int(stack.pop())
                a = int(stack.pop())
                if ele == '+':
                    stack.append(a + b)
            
                if ele == '-':
                    stack.append(a - b)
                    
                if ele == '*':
                    stack.append(a * b)
                    
                if ele == '/':
                    stack.append(a // b)
            else:
                stack.append(ele)
        if stack:
            return stack[0]
        else:
            return 0
_______________________________________________________________________Given_Solution___________________________________________________________
def evalRPN(self, A):
        stack = []
        ret = 0
        first = 0
        second = 0
        for a in A:
            if a == '+' or a == '-' or a == '/' or a == '*':
                if len(stack) < 2:
                    return 0
                second = stack.pop()
                first = stack.pop()
                if a == '+':
                    ret = first + second
                    stack.append(ret)
                elif a == '-':
                    ret = first - second
                    stack.append(ret)
                elif a == '*':
                    ret = first * second
                    stack.append(ret)
                elif a == '/':
                    ret = first // second
                    stack.append(ret)
            else:
                stack.append(int(a))
        if len(stack) == 1:
            return stack[0]
        else:
            return 0
_______________________________________________________________________Approach___________________________________________________________