Minimize Difference
Problem Description

Given an array of integers A of size, N. Minimize the absolute difference between the maximum and minimum element of the array.

You can perform two types of operations at most B times in total to change the values in the array.
Multiple operations can be performed on the same element.

Increment : A[i] -> A[i] + 1.

Decrement : A[i] -> A[i] - 1.

Return the minimum difference possible.



Problem Constraints
1 <= N <= 105

1 <= A[i] <= 106

1 <= B <= 109



Input Format
First argument is an integer array A.
Second argument is an integer B which represents the maximum number of operations that can be performed.



Output Format
Return an integer denoting the minimum difference.



Example Input
Input 1:

 A = [2, 6, 3, 9, 8]
 B = 3
Input 2:

 A = [4, 6, 3, 1, 4]
 B = 5


Example Output
Output 1:

 5
Output 2:

 1


Example Explanation
Explanation 1:

 We can apply the atmost 3 operations in the following sequence.
 Initial array => [2, 6, 3, 9, 8].
   Decrement 9 => [2, 6, 3, 8, 8].
   Increment 2 => [3, 6, 3, 8, 8].
   Increment 3 => [3, 6, 4, 8, 8].
 Max = 8. Min = 3.
 Therefore, abs|Max - Min| = |8 - 3| = 5.
Explanation 2:

 We can apply the atmost 5 operations in the following sequence.
 Initial array => [4, 6, 3, 1, 4].
   Increment 1 => [4, 6, 3, 2, 4].
   Decrement 6 => [4, 5, 3, 2, 4].
   Increment 2 => [4, 5, 3, 3, 4].
   Decrement 5 => [4, 4, 3, 3, 4].
   Increment 3 => [4, 4, 4, 3, 4].
 Max = 4. Min = 3.
 Therefore, abs|Max - Min| = |4 - 3| = 1.


-------------------------------------------------------Solution-----------------------------------------------------------------------
class Solution:
    # @param A : list of integers
    # @param B : integer
    # @return an integer
    def solve(self, A, B):
        
        mi = 999999999
        ma = -999999999
        
        Map = {}
        
        for i in range(len(A)):
            mi = min(A[i], mi)
            ma = max(A[i], ma)
            
            if A[i] not in Map:
                Map[A[i]] = 1
            else:
                Map[A[i]] += 1
        
        while(B != 0 and mi < ma):

            if(Map.get(mi,0) <= Map.get(ma,0)):
                if(B < Map.get(mi,0)):
                    break
                temp = Map.get(mi,0) + Map.get(mi + 1, 0)
                Map[mi+1] = temp
                B -= Map.get(mi)
                mi +=1
            
            else:
                if(B < Map.get(ma)):
                    break
                temp = Map.get(ma) + Map.get(ma - 1, 0)
                Map[ma -1] = temp
                B -= Map.get(ma)
                ma -= 1
                
        return ma - mi

----------------------------------------------------Given Solution-----------------------------------------------------------------------
class Solution:
    # @param A : list of integers
    # @param B : integer
    # @return an integer
    def solve(self, A, B):
        maxx = 0
        k = B
        for i in range(len(A)):
            maxx = max(maxx, A[i])

        freq = [0] * (maxx + 1)
        for i in range(len(A)):
            freq[A[i]] = freq[A[i]] + 1

        i = 0
        j = maxx
        while i < j:
            if freq[i] > freq[j]:
                if freq[j] <= k:
                    freq[j - 1] = freq[j - 1] + freq[j]
                    k = k - freq[j]
                    j = j - 1
                else:
                    break
            else:
                if freq[i] <= k:
                    freq[i + 1] = freq[i + 1] + freq[i]
                    k = k - freq[i]
                    i = i + 1
                else:
                    break

        return j - i
