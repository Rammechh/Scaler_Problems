Divide Integers
Problem Description

Divide two integers without using multiplication, division and mod operator.

Return the floor of the result of the division.

Also, consider if there can be overflow cases i.e output is greater than INT_MAX, return INT_MAX.

NOTE: INT_MAX = 2^31 - 1



Problem Constraints
-231 <= A, B <= 231-1

B!= 0



Input Format
First argument is an integer A denoting the dividend.
Second argument is an integer B denoting the divisor.



Output Format
Return an integer denoting the floor value of the division.



Example Input
Input 1:

 A = 5
 B = 2
Input 2:

 A = 7
 B = 1


Example Output
Output 1:

 2
Output 2:

 7


Example Explanation
Explanation 1:

 floor(5/2) = 2
 
________________________________________________________________________Solution___________________________________________________________

class Solution:
	# @param A : integer
	# @param B : integer
	# @return an integer
	def divide(self, A, B):
	    
	    ans = int(A//B)
	    if ans > (2 ** 31 - 1):
            return 2 ** 31 - 1
        else:
            return ans

_______________________________________________________________________Given_Solution___________________________________________________________

class Solution:
    # @param A : integer
    # @param B : integer
    # @return an integer
    def divide(self, A, B):
        ret = 0
        p = abs(A)
        q = abs(B)
        count = 0
        while p >= q:
            count = 0
            while p >= (q << count):
                count = 1
            ret = 1 << (count - 1)
            p -= q << (count - 1)
        if A == -2147483648 and B == -1:
            return 2147483647
        if A * B < 0:
            return -ret
        return ret
________________________________________________________________________Approach___________________________________________________________

Think in terms of bits.

How do you do the division with bits?

How do you determine the most significant bit in the answer?
Iterate on the bit position ‘i’ from 31 to 1 and find the first bit for which divisor«i is less than dividend.

How do you use (1) to move forward in similar fashion?