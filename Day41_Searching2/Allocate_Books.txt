Allocate Books
Problem Description

Given an array of integers A of size N and an integer B.

College library has N books,the ith book has A[i] number of pages.

You have to allocate books to B number of students so that maximum number of pages alloted to a student is minimum.

A book will be allocated to exactly one student.
Each student has to be allocated at least one book.
Allotment should be in contiguous order, for example: A student cannot be allocated book 1 and book 3, skipping book 2.
Calculate and return that minimum possible number.



NOTE: Return -1 if a valid assignment is not possible.



Problem Constraints
1 <= N <= 105
1 <= A[i], B <= 105



Input Format
The first argument given is the integer array A.
The second argument given is the integer B.



Output Format
Return that minimum possible number



Example Input
A = [12, 34, 67, 90]
B = 2


Example Output
113


Example Explanation
There are 2 number of students. Books can be distributed in following fashion : 
        1) [12] and [34, 67, 90]
        Max number of pages is allocated to student 2 with 34 + 67 + 90 = 191 pages
        2) [12, 34] and [67, 90]
        Max number of pages is allocated to student 2 with 67 + 90 = 157 pages 
        3) [12, 34, 67] and [90]
        Max number of pages is allocated to student 1 with 12 + 34 + 67 = 113 pages
        Of the 3 cases, Option 3 has the minimum pages = 113.
		
_______________________________________________________________________Solution___________________________________________________________

class Solution:
	# @param A : list of integers
	# @param B : integer
	# @return an integer
	def isvalid(self,s,k,n,val):
        students = 1
        pages =0
        for i in range(n):
            pages = pages+s[i]
            if pages>val:
                students = students+1
                pages = s[i]
            if students>k:
                return 0
        return 1
	def books(self, A, B):
        n = len(A)
        if n==B:
            return max(A)
        if n<B:
            return -1
        if B == 1:
            return sum(A)
        start = max(A)
        end = sum(A)
        res = -1
        while start<=end:
            mid = (start+end)//2
            if self.isvalid(A,B,n,mid):
                #print(start,end,mid)
                res = mid
                end = mid-1
            else:
                start = mid+1
        return res
		
		
		# Try
		
        """low = 1
        high = 10 ** 5 
        ans = 1
        Sum = 0
        while (low <= high):
            mid = low + (high - low) // 2
            
            Sum = 0
            cnt = 0
            for i in range(len(A)):
                Sum += A[i]
                if Sum >= mid:
                    cnt += 1
                    Sum = A[i]
            
            if cnt >= B:
                low = mid + 1
                ans = mid
                
            else:
                high = mid - 1
        
        return ans """
_______________________________________________________________________Given_Solution___________________________________________________________

class Solution:
	# @param A : list of integers
	# @param B : integer
	# @return an integer
    def check(self, A, B, x):
        cnt=1
        cursum=0
        n=len(A)
        for i in range(n):
            if(cursum+A[i]>x):
                cnt+=1
                cursum=A[i]
                if(cnt>B):
                    return 0
            else:
                cursum+=A[i]
        return 1
    
    def books(self, A, B):
        sum=0
        n=len(A)
        if(n<B):
            return -1;
        sum=0
        for i in A:
            sum+=i
        lo=max(A)
        hi=sum
        ans=sum
        while(lo<=hi):
            mid=(lo+hi)//2
            
            if(self.check(A,B,mid)):
                ans=min(ans,mid)
                hi=mid-1
            else:
                lo=mid+1
        return ans    
_______________________________________________________________________Approach___________________________________________________________

Problem statement : Given fixed number of pages (V),  how many number of students we need?
Solution :
   simple simulation approach
   intially Sum := 0
   cnt_of_student = 0
   iterate over all books:
        If Sum + number_of_pages_in_current_book > V :
                  increment cnt_of_student
                  update Sum
        Else:
                  update Sum
   EndLoop;
  


    fix range LOW, HIGH
    Loop until LOW < HIGH:
            find MID_point
            Is number of students required to keep max number of pages below MID < M ? 
            IF Yes:
                update HIGH
            Else
                update LOW
    EndLoop;